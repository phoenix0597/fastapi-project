services:
  db:
    image: postgres:16.4
    container_name: booking_db
    env_file:
      - .env-non-dev
    ports:
      - 5433:5432
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: booking_redis
    volumes:
      - redis_data:/data

  booking:
    build:
      context: .
    container_name: booking_app
    env_file:
      - .env-non-dev
    depends_on:
      - db
      - redis
    command: ["./docker-scripts/app.sh"]
    ports:
      - 9000:8000
    volumes:
      - logs:/var/log/booking  # Для логов приложения

  celery:
    build:
      context: .
    container_name: booking_celery
    command: ["./docker-scripts/celery.sh", "celery"]
    env_file:
      - .env-non-dev
    depends_on:
      - redis
    volumes:
      - logs:/var/log/celery  # Для логов Celery

  flower:
    build:
      context: .
    container_name: booking_flower
    command: ["./docker-scripts/celery.sh", "flower"]
    env_file:
      - .env-non-dev
    depends_on:
      - redis
      - celery
    ports:
      - 5555:5555
    volumes:
      - logs:/var/log/flower  # Для логов Flower

  prometheus:
    image: prom/prometheus:latest
    container_name: booking_prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: booking_grafana
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini
    restart: unless-stopped

volumes:
  db_data:
  redis_data:
  logs:
  prometheus_data:
  grafana_data:
